import numpy as np
import matplotlib.pyplot as plt
from matplotlib.pyplot import MultipleLocator

# 创建一个示例的numpy数组
loss = np.array([0.8663849234580994, 1.2059638500213623, 1.0868374109268188, 1.0889416933059692, 1.0982013940811157, 1.110490322113037, 1.1206721067428589, 1.1403251886367798, 1.158400297164917, 1.198738694190979, 1.1974871158599854, 1.1820417642593384, 1.1939120292663574, 1.1929912567138672, 1.153082251548767, 1.1781057119369507, 1.1750844717025757, 1.172011137008667, 1.1757481098175049, 1.182835340499878, 1.1812509298324585, 1.1861563920974731, 1.180765151977539, 1.199598789215088, 1.1929175853729248, 1.230353832244873, 1.2102335691452026, 1.2322893142700195, 1.1955459117889404, 1.2266546487808228, 1.2624295949935913, 1.232438325881958, 1.242511510848999, 1.2043704986572266, 1.211979866027832, 1.2093390226364136, 1.194077730178833, 1.2405152320861816, 1.2211889028549194, 1.1795402765274048, 1.226165771484375, 1.199818730354309, 1.2330589294433594, 1.2424286603927612, 1.2892706394195557, 1.2339270114898682, 1.2816548347473145, 1.2027652263641357, 1.2544718980789185, 1.2276339530944824, 1.235303282737732, 1.263527750968933, 1.2632759809494019, 1.2221916913986206, 1.1988368034362793, 1.2377582788467407, 1.2291959524154663, 1.3253146409988403, 1.3232347965240479, 1.3649243116378784, 1.355829119682312, 1.3642635345458984, 1.3957195281982422, 1.3472355604171753, 1.3338104486465454, 1.407493233680725, 1.3544515371322632, 1.3202438354492188, 1.3148303031921387, 1.3256105184555054, 1.3142982721328735, 1.349258542060852, 1.319541335105896, 1.3309801816940308, 1.3514596223831177, 1.325279951095581, 1.3494274616241455, 1.3605573177337646, 1.3194423913955688, 1.3431529998779297, 1.3508520126342773, 1.3162750005722046, 1.3383402824401855, 1.322377324104309, 1.303154468536377, 1.2934218645095825, 1.3302521705627441, 1.3233206272125244, 1.3193737268447876, 1.3278106451034546, 1.3328510522842407, 1.3688958883285522, 1.355644702911377, 1.3664803504943848, 1.3548126220703125, 1.3466777801513672, 1.354069471359253, 1.3468581438064575, 1.358540654182434, 1.348352313041687, 1.3402589559555054, 1.3494268655776978, 1.3422023057937622, 1.3503860235214233, 1.3390053510665894, 1.3434594869613647, 1.3379205465316772, 1.3335775136947632, 1.3417571783065796, 1.3422961235046387, 1.3288487195968628, 1.3207653760910034, 1.3220571279525757, 1.322039008140564, 1.3245311975479126, 1.3243825435638428, 1.3268718719482422, 1.3278461694717407, 1.329552412033081, 1.33036208152771, 1.3271914720535278, 1.3233791589736938, 1.322065830230713, 1.3240680694580078, 1.3226674795150757, 1.3222765922546387, 1.3215866088867188, 1.3262935876846313, 1.333895206451416, 1.333524465560913, 1.322226881980896, 1.319671630859375, 1.3243263959884644, 1.3343621492385864, 1.3253223896026611, 1.3297038078308105, 1.2944294214248657, 1.2905880212783813, 1.3186672925949097, 1.3515413999557495, 1.322625756263733, 1.3354671001434326, 1.3268649578094482, 1.3341946601867676, 1.3375829458236694, 1.3325927257537842, 1.3242813348770142, 1.314749836921692, 1.3193917274475098, 1.3586760759353638, 1.3336900472640991, 1.341573715209961, 1.3378063440322876, 1.342468023300171, 1.3436353206634521, 1.3461284637451172, 1.3492605686187744, 1.3514001369476318, 1.353662133216858, 1.3504836559295654, 1.349772572517395, 1.3596289157867432, 1.3783715963363647, 1.402256727218628, 1.39935302734375, 1.3907190561294556, 1.406977653503418, 1.4191300868988037, 1.406693696975708, 1.4053704738616943, 1.4067656993865967, 1.3928303718566895, 1.383476734161377, 1.3834906816482544, 1.3951940536499023, 1.4056355953216553, 1.4156321287155151, 1.415825605392456, 1.4011495113372803, 1.3919764757156372, 1.3879269361495972, 1.3837395906448364, 1.3884682655334473, 1.3903179168701172, 1.3978991508483887, 1.4193733930587769, 1.4368703365325928, 1.4175485372543335, 1.3871315717697144, 1.395756483078003, 1.429638385772705, 1.4484782218933105, 1.4321751594543457, 1.3886456489562988, 1.3984932899475098, 1.4405282735824585, 1.4608852863311768, 1.4521257877349854, 1.4159516096115112, 1.399905800819397, 1.4283922910690308, 1.445199966430664, 1.4513698816299438, 1.4413366317749023, 1.4502029418945312, 1.464935541152954, 1.4787603616714478, 1.5042847394943237, 1.515928864479065, 1.5779681205749512, 1.6119142770767212, 1.6484004259109497, 1.668235421180725, 1.6655629873275757, 1.6615580320358276, 1.6372283697128296, 1.5988929271697998, 1.5658243894577026, 1.5432711839675903, 1.5163617134094238, 1.5146666765213013, 1.5122473239898682, 1.5312960147857666, 1.5361849069595337, 1.5432567596435547, 1.521614670753479, 1.5235857963562012, 1.5427035093307495, 1.559145212173462, 1.6054967641830444, 1.6136196851730347, 1.6143114566802979, 1.6116241216659546, 1.5962145328521729, 1.5877317190170288, 1.5720504522323608, 1.5747681856155396, 1.5654352903366089, 1.5698645114898682, 1.55826735496521, 1.5794165134429932, 1.6076550483703613, 1.6340651512145996, 1.656511664390564, 1.6487679481506348, 1.6201708316802979, 1.6006444692611694, 1.612607479095459, 1.640316128730774, 1.648559808731079, 1.6407312154769897, 1.637434959411621, 1.6456265449523926, 1.6500320434570312, 1.6590594053268433, 1.668324589729309, 1.6620211601257324, 1.657510757446289, 1.6520699262619019, 1.6374627351760864, 1.6345399618148804, 1.6393030881881714, 1.6480491161346436, 1.645831823348999, 1.6322386264801025, 1.6309549808502197, 1.6443939208984375, 1.6467480659484863, 1.6314748525619507, 1.6311888694763184, 1.6335418224334717, 1.6330116987228394, 1.6388550996780396, 1.6397478580474854, 1.6174956560134888, 1.610647201538086, 1.616764783859253, 1.620331883430481, 1.6208795309066772, 1.593347191810608, 1.587262511253357, 1.5832229852676392, 1.5861339569091797, 1.5890575647354126, 1.5954912900924683, 1.590950608253479, 1.581608533859253, 1.5709950923919678, 1.557262897491455, 1.5469601154327393, 1.5602372884750366, 1.5883010625839233, 1.5892120599746704, 1.5737590789794922, 1.5411967039108276, 1.5525518655776978, 1.5907734632492065, 1.6024909019470215, 1.5948171615600586, 1.5627872943878174])

input_data = np.array([-4.0533, -4.1015, -4.1847, -4.2664, -4.372, -4.4924, -4.6196, -4.7702, -4.9451, -5.1249, -5.304, -5.49, -5.6676, -5.8349, -6.01, -6.1642, -6.3264, -6.4941, -6.6362, -6.7798, -6.8829, -6.9998, -7.062, -7.1744, -7.3325, -7.4483, -7.5128, -7.6264, -7.7621, -7.8179, -7.8963, -7.9852, -8.0834, -8.1204, -8.1621, -8.2345, -8.3192, -8.3769, -8.4024, -8.4565, -8.4938, -8.5552, -8.6239, -8.6906, -8.7611, -8.8435, -8.9288, -9.0073, -9.0557, -9.0969, -9.1274, -9.1384, -9.1719, -9.23, -9.2872, -9.3483, -9.3649, -9.3796, -9.3986, -9.4209, -9.4445, -9.4696, -9.4878, -9.5124, -9.5344, -9.5511, -9.5955, -9.6251, -9.6476, -9.6725, -9.7142, -9.7502, -9.7871, -9.8231, -9.8597, -9.9025, -9.939, -9.9826, -10.0285, -10.0675, -10.1125, -10.1609, -10.1959, -10.2295, -10.2672, -10.2981, -10.3286, -10.3603, -10.3853, -10.4161, -10.4402, -10.4771, -10.5055, -10.5261, -10.5509, -10.5744, -10.6061, -10.6262, -10.6631, -10.693, -10.719, -10.7489, -10.7702, -10.8015, -10.8229, -10.8542, -10.8737, -10.9002, -10.9232, -10.9441, -10.967, -10.9915, -11.0142, -11.0343, -11.053, -11.0717, -11.0913, -11.1092, -11.1266, -11.1455, -11.1649, -11.1841, -11.2024, -11.2207, -11.2394, -11.2578, -11.2739, -11.2887, -11.3038, -11.3196, -11.3338, -11.347, -11.3589, -11.3692, -11.3828, -11.3977, -11.4234, -11.4481, -11.4716, -11.4913, -11.5115, -11.5342, -11.555, -11.575, -11.5908, -11.6062, -11.624, -11.6433, -11.6641, -11.6793, -11.6948, -11.7137, -11.7321, -11.7502, -11.7681, -11.7857, -11.8027, -11.8187, -11.8336, -11.8469, -11.8629, -11.8811, -11.8989, -11.9096, -11.9193, -11.9321, -11.9476, -11.9633, -11.9802, -11.997, -12.0135, -12.0296, -12.043, -12.0588, -12.0764, -12.0934, -12.1097, -12.1269, -12.1443, -12.1621, -12.1761, -12.1881, -12.2068, -12.226, -12.2436, -12.2595, -12.2757, -12.2931, -12.311, -12.3296, -12.3478, -12.3632, -12.3786, -12.3945, -12.4127, -12.4308, -12.4465, -12.4612, -12.4756, -12.4935, -12.5134, -12.5309, -12.5486, -12.5656, -12.5788, -12.5883, -12.5962, -12.6025, -12.6121, -12.6245, -12.6416, -12.6613, -12.6799, -12.6985, -12.7149, -12.7294, -12.7447, -12.7615, -12.7729, -12.7849, -12.7929, -12.8014, -12.808, -12.8141, -12.8196, -12.8282, -12.8391, -12.8486, -12.8613, -12.8788, -12.8965, -12.9146, -12.9318, -12.9472, -12.9631, -12.9797, -12.9964, -13.0154, -13.0344, -13.0555, -13.0751, -13.0971, -13.1186, -13.1413, -13.1646, -13.1857, -13.2071, -13.2289, -13.2495, -13.2664, -13.2821, -13.3007, -13.3186, -13.3369, -13.3571, -13.377, -13.3965, -13.4154, -13.4347, -13.4554, -13.477, -13.4985, -13.521, -13.5434, -13.5645, -13.5851, -13.6042, -13.6238, -13.6423, -13.6607, -13.6777, -13.6944, -13.7108, -13.7259, -13.7418, -13.7596, -13.7783, -13.7961, -13.8146, -13.8305, -13.8465, -13.863, -13.8809, -13.8999, -13.9195, -13.9366, -13.9514, -13.9647, -13.9782, -13.9917, -14.0062, -14.019, -14.0309, -14.0419, -14.0535, -14.0675, -14.0802, -14.0921, -14.1021, -14.1122])

grad = np.array([-1.9855, -2.1694, -2.449, -1.3582, -1.6534, -2.891, -2.1136, 0.6407, 0.4286, -0.1172, -0.0038, -0.0046, -0.0098, -0.0358, -0.0569, 0.0398, -0.036, 0.0265, -0.0276, 0.0305, -0.0358, 0.0363, -0.0371, 0.0514, -0.0435, 0.0303, -0.0337, 0.0279, -0.0265, 0.0428, -0.0453, 0.0379, -0.0383, 0.0459, -0.0428, 0.0319, -0.0377, 0.0443, -0.0394, 0.0382, -0.0428, 0.0404, -0.0395, 0.0506, -0.0469, 0.0345, -0.0368, 0.0376, -0.0351, 0.0356, -0.0356, 0.0338, -0.0365, 0.0355, -0.0362, 0.045, -0.0414, 0.0346, -0.037, 0.0311, -0.0352, 0.0323, -0.0236, 0.0367, -0.0416, 0.0336, -0.0324, 0.0421, -0.0384, 0.0331, -0.0375, 0.0307, -0.0304, 0.0318, -0.0329, 0.0317, -0.0308, 0.0457, -0.0409, 0.028, -0.0319, 0.0385, -0.0405, 0.0435, -0.042, 0.0421, -0.042, 0.0371, -0.0389, 0.0358, -0.0376, 0.052, -0.0455, 0.0284, -0.0334, 0.0349, -0.0338, 0.0321, -0.0305, 0.0377, -0.0374, 0.0347, -0.036, 0.0428, -0.0429, 0.0474, -0.0432, 0.0391, -0.0441, 0.0264, -0.0215, 0.0344, -0.0399, 0.042, -0.039, 0.0313, -0.0319, 0.0447, -0.0428, 0.0329, -0.0382, 0.0454, -0.0423, 0.0417, -0.0416, 0.0374, -0.0422, 0.0444, -0.0427, 0.0377, -0.0347, 0.0387, -0.0413, 0.0371, -0.0359, 0.0304, -0.0293, 0.0304, -0.0273, 0.032, -0.0366, 0.0373, -0.0345, 0.0333, -0.0374, 0.0422, -0.0425, 0.0395, -0.0383, 0.0492, -0.0468, 0.0368, -0.0378, 0.0437, -0.0438, 0.0346, -0.0387, 0.0433, -0.0442, 0.0426, -0.0368, 0.034, -0.0344, 0.0335, -0.0322, 0.0382, -0.0388, 0.0326, -0.0359, 0.0415, -0.0388, 0.0364, -0.0341, 0.0317, -0.038, 0.0519, -0.0469, 0.0323, -0.0326, 0.0317, -0.0326, 0.0412, -0.041, 0.0401, -0.0453, 0.0408, -0.0383, 0.0342, -0.0296, 0.0206, -0.0114, 0.0198, -0.0289, 0.0392, -0.0436, 0.0362, -0.0358, 0.0378, -0.0392, 0.0384, -0.0399, 0.0386, -0.0332, 0.0386, -0.0409, 0.0358, -0.0349, 0.0409, -0.0423, 0.0435, -0.0384, 0.0383, -0.0435, 0.0417, -0.0394, 0.038, -0.0422, 0.0389, -0.0325, 0.028, -0.0328, 0.0393, -0.0354, 0.0258, -0.0234, 0.0408, -0.0433, 0.0383, -0.0377, 0.0361, -0.0382, 0.0433, -0.0437, 0.0449, -0.0426, 0.0343, -0.0381, 0.0318, -0.0276, 0.0381, -0.0404, 0.0309, -0.0294, 0.0417, -0.0424, 0.0401, -0.04, 0.0313, -0.0306, 0.0394, -0.0411, 0.0292, -0.0261, 0.04, -0.045, 0.0388, -0.0381, 0.0436, -0.0414, 0.033, -0.0332, 0.0346, -0.0383, 0.0489, -0.0448, 0.0375, -0.0403, 0.0359, -0.0358, 0.0471, -0.0424, 0.0285, -0.0308, 0.0395, -0.0409, 0.0426, -0.0413, 0.0371, -0.035, 0.0208, -0.02, 0.0249, -0.0214, 0.0256, -0.0331, 0.0377, -0.0373, 0.0458, -0.0465, 0.0415, -0.0417, 0.0347, -0.0348, 0.0441, -0.0427, 0.027, -0.0278, 0.04, -0.0395, 0.0357])

all_data = np.concatenate([loss[:51], input_data[:51]])  # 仅考虑前101个数据点
y_min = np.floor(min(all_data))
y_max = np.ceil(max(all_data))

plt.figure(figsize=(15, 5))  # 设置整体图形大小

# 创建第一个子图
plt.subplot(1, 3, 1)  # 创建1行3列的子图，并激活第1个子图
plt.plot(loss[:101])  # 只绘制前101个数据点
plt.title('loss')
plt.xlabel('Index')
plt.ylabel('Loss Value')
plt.grid(True)
plt.xticks(np.arange(0, 51, 10))  # 设置x轴刻度
plt.yticks(np.arange(np.floor(min(loss[:51])*20)/20, np.ceil(max(loss[:51])*20)/20 + 0.05, 0.05))
plt.xlim(0, 50)

# 创建第二个子图
plt.subplot(1, 3, 2)  # 创建1行3列的子图，并激活第2个子图
plt.plot(input_data[:51])  # 只绘制前101个数据点
plt.title('input_data')
plt.xlabel('Index')
plt.ylabel('Input Data Value')
plt.grid(True)
plt.xticks(np.arange(0, 51, 10))  # 设置x轴刻度
plt.yticks(np.arange(y_min, y_max + 0.5, 0.5))  # 纵轴刻度间隔0.5
plt.ylim(y_min, y_max)
plt.xlim(0, 50)

# 调整子图之间的间距
plt.tight_layout()

# 保存图形为PNG格式文件
plt.savefig('minus2_1_plots2.png')

# 显示图形
plt.show()


